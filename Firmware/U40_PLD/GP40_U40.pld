Name            GP40_U40;
Partno          000001;
Revision        01;
Date            2024-01-20;
Designer        Mikica Kocic;
Company         3MBK;
Assembly        Galaksija 40;
Location        U40;
Device          g16v8ms;

/* Allowable Target Device Types: g16v8ms */

/** Inputs **/

pin 1       =   CLK    ;
pin 2       =   CLK2   ;   /* Tied to CLK (pin 1), used in logic */
pin 3       = ! RESET  ;
pin 4       = ! WR     ;
pin 5       = ! CS     ;
pin 6       =   A0     ;
pin 7       =   D0     ;
pin 9       =   RUN    ;   /* Tied to Q3 (pin 12), used in logic */
pin 11      = ! OE     ;

/** Outputs **/

/* SD_CS, SD_SCK are routed to SD card */
/* S0, S1 and CLK are routed to LS299 */

pin 19      =   SD_SCK ;
pin 18      = ! SD_CS  ;
pin 17      =   S0     ;
pin 16      =   S1     ;
pin 15      =   Q0     ;
pin 14      =   Q1     ;
pin 13      =   Q2     ;
pin 12      =   Q3     ; /* == RUN, feedback to pin 9 */

/** Declarations and Intermediate Variable Definitions **/

field shift_counter = [Q0..3] ;

/** Logic Equations **/

S1      = CS & WR & !A0 ;
S0      = RUN # S1 ;
SD_SCK  = RUN & !CLK2 ;

/* SD chip select state machine */

sequence SD_CS
{
  present 'b'0
    if RESET next 'b'0 ;
    /* writing D0 = 1 to &X001 sets SD_CS = 1 */
    if CS & WR & A0:1 & D0:1 next 'b'1 ;
    default next 'b'0 ;
  present 'b'1
    if RESET next 'b'0 ;
    /* writing D0 = 0 to &X001 sets SD_CS = 0 */
    if CS & WR & A0:1 & D0:0 next 'b'0 ;
    default next 'b'1 ;
}

/* Shift counter state machine.
   Writing D0-D7 to LS299 starts the sequence C0 -> C1, ... C8, C0.
   The top bit Q3 of shift_counter encodes the 'RUN' state.
*/

$define C0   'b'0000
$define C1   'b'1000
$define C2   'b'1001
$define C3   'b'1010
$define C4   'b'1011
$define C5   'b'1100
$define C6   'b'1101
$define C7   'b'1110
$define C8   'b'1111

sequence shift_counter
{
  present C0
    if RESET next C0 ;
    /* writing D0-D7 to LS299 starts serial IO */
    if CS & WR & A0:0 next C1;
    default next C0 ;
  present C1 if RESET next C0 ; default next C2 ;
  present C2 if RESET next C0 ; default next C3 ;
  present C3 if RESET next C0 ; default next C4 ;
  present C4 if RESET next C0 ; default next C5 ;
  present C5 if RESET next C0 ; default next C6 ;
  present C6 if RESET next C0 ; default next C7 ;
  present C7 if RESET next C0 ; default next C8 ;
  present C8 if RESET next C0 ; default next C0 ;
}
